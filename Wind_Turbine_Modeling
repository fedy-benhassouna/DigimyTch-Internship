{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":317642,"sourceType":"datasetVersion","datasetId":133415}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/fedybenhassouna/wind-turbine-modeling-project?scriptVersionId=189309769\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-22T12:58:02.274294Z","iopub.execute_input":"2024-07-22T12:58:02.275181Z","iopub.status.idle":"2024-07-22T12:58:02.66285Z","shell.execute_reply.started":"2024-07-22T12:58:02.275146Z","shell.execute_reply":"2024-07-22T12:58:02.661646Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"/kaggle/input/wind-turbine-scada-dataset/T1.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# 1 - Import Packages","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:02.665013Z","iopub.execute_input":"2024-07-22T12:58:02.665682Z","iopub.status.idle":"2024-07-22T12:58:03.365947Z","shell.execute_reply.started":"2024-07-22T12:58:02.665643Z","shell.execute_reply":"2024-07-22T12:58:03.364962Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":"# 2 - Data Preprocessing ","metadata":{}},{"cell_type":"markdown","source":"## 2.1 - Noise detection and replacement functions","metadata":{}},{"cell_type":"code","source":"def noise_threshold(dataframe, column, q1=0.25, q3=0.75):\n    Q1 = dataframe[column].quantile(q1)\n    Q3 = dataframe[column].quantile(q3)\n    iqr = Q3 - Q1\n    up_limit = Q3 + 1.5 * iqr\n    low_limit = max(Q1 - 1.5 * iqr, 0)  # Ensure the lower limit is not negative\n    return low_limit, up_limit\n\ndef replace_with_thresholds(dataframe, column):\n    low_limit, up_limit = noise_threshold(dataframe, column)\n    dataframe.loc[(dataframe[column] < low_limit), column] = low_limit\n    dataframe.loc[(dataframe[column] > up_limit), column] = up_limit","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:03.367127Z","iopub.execute_input":"2024-07-22T12:58:03.36744Z","iopub.status.idle":"2024-07-22T12:58:03.374929Z","shell.execute_reply.started":"2024-07-22T12:58:03.3674Z","shell.execute_reply":"2024-07-22T12:58:03.373757Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":"## 2.2 - Data loading","metadata":{}},{"cell_type":"code","source":"data = pd.read_csv(\"/kaggle/input/wind-turbine-scada-dataset/T1.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:03.377756Z","iopub.execute_input":"2024-07-22T12:58:03.378256Z","iopub.status.idle":"2024-07-22T12:58:03.576008Z","shell.execute_reply.started":"2024-07-22T12:58:03.378225Z","shell.execute_reply":"2024-07-22T12:58:03.575048Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"print('How many observations do we have?')\nprint(data.count())\nprint('----------------')\nprint(data.columns)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:03.57733Z","iopub.execute_input":"2024-07-22T12:58:03.577736Z","iopub.status.idle":"2024-07-22T12:58:03.591464Z","shell.execute_reply.started":"2024-07-22T12:58:03.577701Z","shell.execute_reply":"2024-07-22T12:58:03.590436Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"How many observations do we have?\nDate/Time                        50530\nLV ActivePower (kW)              50530\nWind Speed (m/s)                 50530\nTheoretical_Power_Curve (KWh)    50530\nWind Direction (°)               50530\ndtype: int64\n----------------\nIndex(['Date/Time', 'LV ActivePower (kW)', 'Wind Speed (m/s)',\n       'Theoretical_Power_Curve (KWh)', 'Wind Direction (°)'],\n      dtype='object')\n","output_type":"stream"}]},{"cell_type":"code","source":"data.describe()","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:03.592566Z","iopub.execute_input":"2024-07-22T12:58:03.592875Z","iopub.status.idle":"2024-07-22T12:58:03.63514Z","shell.execute_reply.started":"2024-07-22T12:58:03.592849Z","shell.execute_reply":"2024-07-22T12:58:03.63418Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"       LV ActivePower (kW)  Wind Speed (m/s)  Theoretical_Power_Curve (KWh)  \\\ncount         50530.000000      50530.000000                   50530.000000   \nmean           1307.684332          7.557952                    1492.175463   \nstd            1312.459242          4.227166                    1368.018238   \nmin              -2.471405          0.000000                       0.000000   \n25%              50.677890          4.201395                     161.328167   \n50%             825.838074          7.104594                    1063.776283   \n75%            2482.507568         10.300020                    2964.972462   \nmax            3618.732910         25.206011                    3600.000000   \n\n       Wind Direction (°)  \ncount        50530.000000  \nmean           123.687559  \nstd             93.443736  \nmin              0.000000  \n25%             49.315437  \n50%             73.712978  \n75%            201.696720  \nmax            359.997589  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>LV ActivePower (kW)</th>\n      <th>Wind Speed (m/s)</th>\n      <th>Theoretical_Power_Curve (KWh)</th>\n      <th>Wind Direction (°)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>50530.000000</td>\n      <td>50530.000000</td>\n      <td>50530.000000</td>\n      <td>50530.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1307.684332</td>\n      <td>7.557952</td>\n      <td>1492.175463</td>\n      <td>123.687559</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1312.459242</td>\n      <td>4.227166</td>\n      <td>1368.018238</td>\n      <td>93.443736</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-2.471405</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>50.677890</td>\n      <td>4.201395</td>\n      <td>161.328167</td>\n      <td>49.315437</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>825.838074</td>\n      <td>7.104594</td>\n      <td>1063.776283</td>\n      <td>73.712978</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2482.507568</td>\n      <td>10.300020</td>\n      <td>2964.972462</td>\n      <td>201.696720</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>3618.732910</td>\n      <td>25.206011</td>\n      <td>3600.000000</td>\n      <td>359.997589</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"###  Extracting month and hour  ","metadata":{}},{"cell_type":"markdown","source":"adding month and hour as features can be a good idea. These features can capture temporal patterns in this data that might be relevant for predicting the target variable.","metadata":{}},{"cell_type":"code","source":"data['month'] =( data['Date/Time'].str[5:7].astype(int) - 1) \ndata['hour'] = data['Date/Time'].str[11:13].astype(int)  ","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:03.636618Z","iopub.execute_input":"2024-07-22T12:58:03.636999Z","iopub.status.idle":"2024-07-22T12:58:03.682985Z","shell.execute_reply.started":"2024-07-22T12:58:03.636964Z","shell.execute_reply":"2024-07-22T12:58:03.682153Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":"### Question: Is there any correlation between the wind speed, wind direction and power production?","metadata":{}},{"cell_type":"markdown","source":"#### Imagine you're looking at wind speed and power production:\n\n##### Positive Correlation: When the wind speed is high, the power production is also high.\n##### Negative Correlation: When the wind speed is high, the power production is low.\n##### No Correlation: Wind speed and power production do not show any consistent relationship.","metadata":{}},{"cell_type":"code","source":"correlation_matrix = data[['Wind Speed (m/s)', 'Wind Direction (°)', 'LV ActivePower (kW)']].corr()\n\n\n# Visualize the correlation matrix\nsns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')\nplt.title('Correlation between Wind Speed, Wind Direction, and Power Production')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:03.684128Z","iopub.execute_input":"2024-07-22T12:58:03.684445Z","iopub.status.idle":"2024-07-22T12:58:04.020197Z","shell.execute_reply.started":"2024-07-22T12:58:03.684398Z","shell.execute_reply":"2024-07-22T12:58:04.019245Z"},"trusted":true},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"**Wind speed and power production is highly correlated as one would expect**","metadata":{}},{"cell_type":"markdown","source":"### Question: What is the average power production level for different wind speeds?","metadata":{}},{"cell_type":"code","source":"# Define the wind speed intervals\nwind_speed_intervals = [0, 5, 10, 15, 20, 25, 30]\nwind_speed = []\navg_power = []\n\n# Calculate the average power production for each interval\nfor i in range(len(wind_speed_intervals) - 1):\n    lower_bound = wind_speed_intervals[i]\n    upper_bound = wind_speed_intervals[i + 1]\n    avg_value = data[(data['Wind Speed (m/s)'] > lower_bound) & (data['Wind Speed (m/s)'] <= upper_bound)]['LV ActivePower (kW)'].mean()\n    avg_power.append(avg_value)\n    wind_speed.append(f'{lower_bound}-{upper_bound}')\n\n# Manually include the last interval (20-25 m/s)\nlower_bound = 20\nupper_bound = 25\navg_value = data[(data['Wind Speed (m/s)'] > lower_bound) & (data['Wind Speed (m/s)'] <= upper_bound)]['LV ActivePower (kW)'].mean()\navg_power.append(avg_value)\nwind_speed.append(f'{lower_bound}-{upper_bound}')\n\n# Create the bar plot\nplt.figure(figsize=(10, 6))\nsns.barplot(x=wind_speed, y=avg_power, color='orange')\nplt.title('Avg Power Production for 5 m/s Wind Speed Increments')\nplt.xlabel('Wind Speed (m/s)')\nplt.ylabel('Average Power Production (kW)')\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:04.021683Z","iopub.execute_input":"2024-07-22T12:58:04.022069Z","iopub.status.idle":"2024-07-22T12:58:04.321358Z","shell.execute_reply.started":"2024-07-22T12:58:04.022034Z","shell.execute_reply":"2024-07-22T12:58:04.320468Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1765: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.\n  order = pd.unique(vector)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"**From the graph above we can see the power production reaches near a maximum level after the wind speed reaches 15 m/s.**\n**i will take this in consideration later for better optimization**\n","metadata":{}},{"cell_type":"markdown","source":"### Question: What is the power production for different wind directions ? \n\n**Let's create a polar diagram with wind speed, wind direction and power production from the sample data.**","metadata":{}},{"cell_type":"code","source":"from math import radians\n\nsample_df = data.sample(n=1000, random_state=1)\n\nplt.figure(figsize=(8, 8))\nax = plt.subplot(111, polar=True)\n\n# Scatter plot with wind direction in radians and power production as radius\nsns.scatterplot(x=[radians(x) for x in sample_df['Wind Direction (°)']], \n                y=sample_df['LV ActivePower (kW)'],\n                hue=sample_df['LV ActivePower (kW)'],\n                alpha=0.7, legend=None, palette=\"viridis\")\n\n# Set the polar diagram's top to represent the North\nax.set_theta_zero_location('N')\n\n# Set -1 to start the wind direction clockwise\nax.set_theta_direction(-1)\n\n# Adjust radial label position for better visibility\nax.set_rlabel_position(110)\n\nplt.title('Wind Direction - Power Production Diagram')\nplt.ylabel(None)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:04.324658Z","iopub.execute_input":"2024-07-22T12:58:04.324984Z","iopub.status.idle":"2024-07-22T12:58:04.943249Z","shell.execute_reply.started":"2024-07-22T12:58:04.324957Z","shell.execute_reply":"2024-07-22T12:58:04.942245Z"},"trusted":true},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x800 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"**We can see that the wind turbine produces more power if the wind blows from the directions between 000-090 and 180-270 degrees.**","metadata":{}},{"cell_type":"markdown","source":"### Question: Does the manufacturer's theoritical power production curve fit well with the real production?","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(10,6))\nsns.scatterplot(x='Wind Speed (m/s)', y='LV ActivePower (kW)', color='orange', label='Real Production', alpha=0.5, data=data)\nsns.lineplot(x='Wind Speed (m/s)', y='Theoretical_Power_Curve (KWh)', color='blue', label='Theoritical Production', data=data)\nplt.title('Wind Speed and Power Production Chart')\nplt.ylabel('Power Production (kw)');","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:04.944641Z","iopub.execute_input":"2024-07-22T12:58:04.945022Z","iopub.status.idle":"2024-07-22T12:58:31.912697Z","shell.execute_reply.started":"2024-07-22T12:58:04.944988Z","shell.execute_reply":"2024-07-22T12:58:31.911712Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"**From the graph above, we can see the theoritical power production curve generally fits well with the real production.**\n\n**We can see the power production reaches a maximum level and continues in a straight line if the wind speed reaches to 15 m/s.**\n\n**Also we can see there are some 0 power production, even the wind speed is higher than 5 m/s. I want to investigate the reason.**\n\n**But before what is the minimum wind speed for theoritical power production curve?**\n\n### Question: What is the wind speed threshold value for zero theorical power?","metadata":{}},{"cell_type":"code","source":"# Filter the data where both LV ActivePower and Theoretical_Power_Curve are equal to 0\nzero_theo_power = data[(data['LV ActivePower (kW)'] == 0) & (data['Theoretical_Power_Curve (KWh)'] == 0)]\n\n# Display a sample of the filtered data\nprint(zero_theo_power[['Wind Speed (m/s)', 'Theoretical_Power_Curve (KWh)', 'LV ActivePower (kW)']].sample(5))\n\n# Plot the wind speed distribution for 0 power production\nzero_theo_power['Wind Speed (m/s)'].hist()\nplt.title('Wind Speed Distribution for 0 Power Production')\nplt.xlabel('Wind Speed (m/s)')\nplt.ylabel('Counts for 0 Power Production')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:31.913982Z","iopub.execute_input":"2024-07-22T12:58:31.914304Z","iopub.status.idle":"2024-07-22T12:58:32.199488Z","shell.execute_reply.started":"2024-07-22T12:58:31.914276Z","shell.execute_reply":"2024-07-22T12:58:32.198263Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"       Wind Speed (m/s)  Theoretical_Power_Curve (KWh)  LV ActivePower (kW)\n34634          1.931768                            0.0                  0.0\n26047          2.662030                            0.0                  0.0\n29221          1.331622                            0.0                  0.0\n43827          0.819000                            0.0                  0.0\n42216          1.177419                            0.0                  0.0\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"**We can see from above, limit for the theoritical power curve is 3 m/s wind speed. If the wind speed is below 3 m/s model doesn't expect any power production.**\n\n**But there are some observations for 0 power production even the wind speed is more than 3 m/s.So , there are examples of failure of Turbines**\n\n### Failure Condition Function\n","metadata":{}},{"cell_type":"code","source":"def failure_condition(row):\n    # Check the conditions\n    if (row['LV ActivePower (kW)'] == 0 and \n        row['Theoretical_Power_Curve (KWh)'] != 0 and \n        row['Wind Speed (m/s)'] > 3.0 ) : #and \n        #((0 <= row['Wind Direction (°)'] <= 90) or (135 <= row['Wind Direction (°)'] <= 270))):\n        return 1\n    else:\n        return 0\ndata['Failure Condition'] = data.apply(failure_condition, axis=1)\n\n# Display the first few rows of the updated data\nprint(data.head())\n\n# Print the number of observations that meet the failure condition\nfailure_count = data['Failure Condition'].sum()\nprint('No of Observations (while Wind Speed > 3 m/s and Power Production = 0 ', failure_count)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:32.200956Z","iopub.execute_input":"2024-07-22T12:58:32.201406Z","iopub.status.idle":"2024-07-22T12:58:32.654909Z","shell.execute_reply.started":"2024-07-22T12:58:32.201357Z","shell.execute_reply":"2024-07-22T12:58:32.653884Z"},"trusted":true},"execution_count":16,"outputs":[{"name":"stdout","text":"          Date/Time  LV ActivePower (kW)  Wind Speed (m/s)  \\\n0  01 01 2018 00:00           380.047791          5.311336   \n1  01 01 2018 00:10           453.769196          5.672167   \n2  01 01 2018 00:20           306.376587          5.216037   \n3  01 01 2018 00:30           419.645905          5.659674   \n4  01 01 2018 00:40           380.650696          5.577941   \n\n   Theoretical_Power_Curve (KWh)  Wind Direction (°)  month  hour  \\\n0                     416.328908          259.994904      1     0   \n1                     519.917511          268.641113      1     0   \n2                     390.900016          272.564789      1     0   \n3                     516.127569          271.258087      1     0   \n4                     491.702972          265.674286      1     0   \n\n   Failure Condition  \n0                  0  \n1                  0  \n2                  0  \n3                  0  \n4                  0  \nNo of Observations (while Wind Speed > 3 m/s and Power Production = 0 and Wind Direction = [0, 90] or [135, 270]):  3497\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**There are 2844 observations of Failure where theoritically there should be power production.**","metadata":{}},{"cell_type":"code","source":"data.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:32.656041Z","iopub.execute_input":"2024-07-22T12:58:32.656324Z","iopub.status.idle":"2024-07-22T12:58:32.669598Z","shell.execute_reply.started":"2024-07-22T12:58:32.656299Z","shell.execute_reply":"2024-07-22T12:58:32.668486Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"          Date/Time  LV ActivePower (kW)  Wind Speed (m/s)  \\\n0  01 01 2018 00:00           380.047791          5.311336   \n1  01 01 2018 00:10           453.769196          5.672167   \n2  01 01 2018 00:20           306.376587          5.216037   \n3  01 01 2018 00:30           419.645905          5.659674   \n4  01 01 2018 00:40           380.650696          5.577941   \n\n   Theoretical_Power_Curve (KWh)  Wind Direction (°)  month  hour  \\\n0                     416.328908          259.994904      1     0   \n1                     519.917511          268.641113      1     0   \n2                     390.900016          272.564789      1     0   \n3                     516.127569          271.258087      1     0   \n4                     491.702972          265.674286      1     0   \n\n   Failure Condition  \n0                  0  \n1                  0  \n2                  0  \n3                  0  \n4                  0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date/Time</th>\n      <th>LV ActivePower (kW)</th>\n      <th>Wind Speed (m/s)</th>\n      <th>Theoretical_Power_Curve (KWh)</th>\n      <th>Wind Direction (°)</th>\n      <th>month</th>\n      <th>hour</th>\n      <th>Failure Condition</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>01 01 2018 00:00</td>\n      <td>380.047791</td>\n      <td>5.311336</td>\n      <td>416.328908</td>\n      <td>259.994904</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>01 01 2018 00:10</td>\n      <td>453.769196</td>\n      <td>5.672167</td>\n      <td>519.917511</td>\n      <td>268.641113</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>01 01 2018 00:20</td>\n      <td>306.376587</td>\n      <td>5.216037</td>\n      <td>390.900016</td>\n      <td>272.564789</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>01 01 2018 00:30</td>\n      <td>419.645905</td>\n      <td>5.659674</td>\n      <td>516.127569</td>\n      <td>271.258087</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>01 01 2018 00:40</td>\n      <td>380.650696</td>\n      <td>5.577941</td>\n      <td>491.702972</td>\n      <td>265.674286</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 2.3 - Handling missing values\n","metadata":{}},{"cell_type":"code","source":"# Number of rows with any missing values\nnum_rows_with_missing = data.isnull().any(axis=1).sum()\n\nprint(f\"Number of rows with missing values: {num_rows_with_missing}\")\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:32.670937Z","iopub.execute_input":"2024-07-22T12:58:32.671316Z","iopub.status.idle":"2024-07-22T12:58:32.681778Z","shell.execute_reply.started":"2024-07-22T12:58:32.671289Z","shell.execute_reply":"2024-07-22T12:58:32.680755Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"Number of rows with missing values: 0\n","output_type":"stream"}]},{"cell_type":"code","source":"data = data.dropna() #its  useless in this case","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:32.682986Z","iopub.execute_input":"2024-07-22T12:58:32.683292Z","iopub.status.idle":"2024-07-22T12:58:32.693532Z","shell.execute_reply.started":"2024-07-22T12:58:32.683267Z","shell.execute_reply":"2024-07-22T12:58:32.692625Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":"## 2.4 - Removing noise \n","metadata":{}},{"cell_type":"markdown","source":"### Question: Is there any  outliers?","metadata":{}},{"cell_type":"code","source":"columns = ['LV ActivePower (kW)', 'Wind Speed (m/s)','Theoretical_Power_Curve (KWh)', 'Wind Direction (°)']\n\nplt.figure(figsize=(20, 3))\nfor i, each in enumerate(columns, 1):\n    plt.subplot(1, 4, i)\n    sns.boxplot(x=data[each])\n    plt.title(each)\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:32.694852Z","iopub.execute_input":"2024-07-22T12:58:32.69531Z","iopub.status.idle":"2024-07-22T12:58:33.2508Z","shell.execute_reply.started":"2024-07-22T12:58:32.695281Z","shell.execute_reply":"2024-07-22T12:58:33.249792Z"},"trusted":true},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 2000x300 with 4 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"**From the graphs above I can see there are some outliers in the wind speed data.**\n\n**I will find the upper and lower threshold values for the wind speed data, and I will analyze the outliers.**","metadata":{}},{"cell_type":"code","source":"data.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:33.252073Z","iopub.execute_input":"2024-07-22T12:58:33.252391Z","iopub.status.idle":"2024-07-22T12:58:33.267221Z","shell.execute_reply.started":"2024-07-22T12:58:33.252363Z","shell.execute_reply":"2024-07-22T12:58:33.266113Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"          Date/Time  LV ActivePower (kW)  Wind Speed (m/s)  \\\n0  01 01 2018 00:00           380.047791          5.311336   \n1  01 01 2018 00:10           453.769196          5.672167   \n2  01 01 2018 00:20           306.376587          5.216037   \n3  01 01 2018 00:30           419.645905          5.659674   \n4  01 01 2018 00:40           380.650696          5.577941   \n5  01 01 2018 00:50           402.391998          5.604052   \n6  01 01 2018 01:00           447.605713          5.793008   \n7  01 01 2018 01:10           387.242188          5.306050   \n8  01 01 2018 01:20           463.651215          5.584629   \n9  01 01 2018 01:30           439.725708          5.523228   \n\n   Theoretical_Power_Curve (KWh)  Wind Direction (°)  month  hour  \\\n0                     416.328908          259.994904      1     0   \n1                     519.917511          268.641113      1     0   \n2                     390.900016          272.564789      1     0   \n3                     516.127569          271.258087      1     0   \n4                     491.702972          265.674286      1     0   \n5                     499.436385          264.578613      1     0   \n6                     557.372363          266.163605      1     1   \n7                     414.898179          257.949493      1     1   \n8                     493.677652          253.480698      1     1   \n9                     475.706783          258.723785      1     1   \n\n   Failure Condition  \n0                  0  \n1                  0  \n2                  0  \n3                  0  \n4                  0  \n5                  0  \n6                  0  \n7                  0  \n8                  0  \n9                  0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date/Time</th>\n      <th>LV ActivePower (kW)</th>\n      <th>Wind Speed (m/s)</th>\n      <th>Theoretical_Power_Curve (KWh)</th>\n      <th>Wind Direction (°)</th>\n      <th>month</th>\n      <th>hour</th>\n      <th>Failure Condition</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>01 01 2018 00:00</td>\n      <td>380.047791</td>\n      <td>5.311336</td>\n      <td>416.328908</td>\n      <td>259.994904</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>01 01 2018 00:10</td>\n      <td>453.769196</td>\n      <td>5.672167</td>\n      <td>519.917511</td>\n      <td>268.641113</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>01 01 2018 00:20</td>\n      <td>306.376587</td>\n      <td>5.216037</td>\n      <td>390.900016</td>\n      <td>272.564789</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>01 01 2018 00:30</td>\n      <td>419.645905</td>\n      <td>5.659674</td>\n      <td>516.127569</td>\n      <td>271.258087</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>01 01 2018 00:40</td>\n      <td>380.650696</td>\n      <td>5.577941</td>\n      <td>491.702972</td>\n      <td>265.674286</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>01 01 2018 00:50</td>\n      <td>402.391998</td>\n      <td>5.604052</td>\n      <td>499.436385</td>\n      <td>264.578613</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>01 01 2018 01:00</td>\n      <td>447.605713</td>\n      <td>5.793008</td>\n      <td>557.372363</td>\n      <td>266.163605</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>01 01 2018 01:10</td>\n      <td>387.242188</td>\n      <td>5.306050</td>\n      <td>414.898179</td>\n      <td>257.949493</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>01 01 2018 01:20</td>\n      <td>463.651215</td>\n      <td>5.584629</td>\n      <td>493.677652</td>\n      <td>253.480698</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>01 01 2018 01:30</td>\n      <td>439.725708</td>\n      <td>5.523228</td>\n      <td>475.706783</td>\n      <td>258.723785</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"a, b = noise_threshold(data, 'Wind Speed (m/s)', q1=0.25, q3=0.75)\nprint(a,b)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:33.268279Z","iopub.execute_input":"2024-07-22T12:58:33.268603Z","iopub.status.idle":"2024-07-22T12:58:33.280462Z","shell.execute_reply.started":"2024-07-22T12:58:33.268578Z","shell.execute_reply":"2024-07-22T12:58:33.279437Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"0 19.447956860065272\n","output_type":"stream"}]},{"cell_type":"code","source":"\nreplace_with_thresholds(data, 'Wind Speed (m/s)')\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:33.281864Z","iopub.execute_input":"2024-07-22T12:58:33.282218Z","iopub.status.idle":"2024-07-22T12:58:33.291815Z","shell.execute_reply.started":"2024-07-22T12:58:33.282191Z","shell.execute_reply":"2024-07-22T12:58:33.290851Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"markdown","source":"## 2.5 - Data Normalization","metadata":{}},{"cell_type":"code","source":"scaler = StandardScaler()\nnumeric_cols = [ 'Wind Speed (m/s)', 'Wind Direction (°)','Theoretical_Power_Curve (KWh)','hour','month']\ndata[numeric_cols] = scaler.fit_transform(data[numeric_cols])\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:33.293127Z","iopub.execute_input":"2024-07-22T12:58:33.293456Z","iopub.status.idle":"2024-07-22T12:58:33.307122Z","shell.execute_reply.started":"2024-07-22T12:58:33.293409Z","shell.execute_reply":"2024-07-22T12:58:33.306073Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"data.head()\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:33.308432Z","iopub.execute_input":"2024-07-22T12:58:33.308746Z","iopub.status.idle":"2024-07-22T12:58:33.322383Z","shell.execute_reply.started":"2024-07-22T12:58:33.30872Z","shell.execute_reply":"2024-07-22T12:58:33.321318Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"          Date/Time  LV ActivePower (kW)  Wind Speed (m/s)  \\\n0  01 01 2018 00:00           380.047791         -0.533049   \n1  01 01 2018 00:10           453.769196         -0.447046   \n2  01 01 2018 00:20           306.376587         -0.555764   \n3  01 01 2018 00:30           419.645905         -0.450023   \n4  01 01 2018 00:40           380.650696         -0.469504   \n\n   Theoretical_Power_Curve (KWh)  Wind Direction (°)  month      hour  \\\n0                      -0.786435            1.458725    0.0 -1.660864   \n1                      -0.710712            1.551254    0.0 -1.660864   \n2                      -0.805023            1.593244    0.0 -1.660864   \n3                      -0.713483            1.579260    0.0 -1.660864   \n4                      -0.731337            1.519504    0.0 -1.660864   \n\n   Failure Condition  \n0                  0  \n1                  0  \n2                  0  \n3                  0  \n4                  0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date/Time</th>\n      <th>LV ActivePower (kW)</th>\n      <th>Wind Speed (m/s)</th>\n      <th>Theoretical_Power_Curve (KWh)</th>\n      <th>Wind Direction (°)</th>\n      <th>month</th>\n      <th>hour</th>\n      <th>Failure Condition</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>01 01 2018 00:00</td>\n      <td>380.047791</td>\n      <td>-0.533049</td>\n      <td>-0.786435</td>\n      <td>1.458725</td>\n      <td>0.0</td>\n      <td>-1.660864</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>01 01 2018 00:10</td>\n      <td>453.769196</td>\n      <td>-0.447046</td>\n      <td>-0.710712</td>\n      <td>1.551254</td>\n      <td>0.0</td>\n      <td>-1.660864</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>01 01 2018 00:20</td>\n      <td>306.376587</td>\n      <td>-0.555764</td>\n      <td>-0.805023</td>\n      <td>1.593244</td>\n      <td>0.0</td>\n      <td>-1.660864</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>01 01 2018 00:30</td>\n      <td>419.645905</td>\n      <td>-0.450023</td>\n      <td>-0.713483</td>\n      <td>1.579260</td>\n      <td>0.0</td>\n      <td>-1.660864</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>01 01 2018 00:40</td>\n      <td>380.650696</td>\n      <td>-0.469504</td>\n      <td>-0.731337</td>\n      <td>1.519504</td>\n      <td>0.0</td>\n      <td>-1.660864</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### Spliting The Data","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\n\n# Split the data into features and target\nX = data[['month','hour', 'Wind Speed (m/s)', 'Theoretical_Power_Curve (KWh)', 'Wind Direction (°)']]\ny = data['Failure Condition']\n\n# Perform the train-test split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\n\n# Display the shapes of the resulting datasets\nprint(\"X_train shape:\", X_train.shape)\nprint(\"X_test shape:\", X_test.shape)\nprint(\"y_train shape:\", y_train.shape)\nprint(\"y_test shape:\", y_test.shape)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:33.323733Z","iopub.execute_input":"2024-07-22T12:58:33.324078Z","iopub.status.idle":"2024-07-22T12:58:33.415228Z","shell.execute_reply.started":"2024-07-22T12:58:33.324053Z","shell.execute_reply":"2024-07-22T12:58:33.414035Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"X_train shape: (25265, 5)\nX_test shape: (25265, 5)\ny_train shape: (25265,)\ny_test shape: (25265,)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# 3 - Model Training","metadata":{}},{"cell_type":"markdown","source":"**Our problem type here is binary classification , so we will choose over 3 models :**\n- Logistic Regression\n- Random Forest\n- XGBoost\n","metadata":{}},{"cell_type":"markdown","source":"**Metrics Choice**\nOur classes are imbalanced ,  metrics such as F1-score, precision, or recall may be more appropriate.","metadata":{}},{"cell_type":"markdown","source":"### Model Evaluation Function ","metadata":{}},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import  precision_score , recall_score, f1_score,accuracy_score\n\n\ndef evaluate_model(model, X_test, y_test):\n    y_pred = model.predict(X_test)\n\n    accuracy = accuracy_score(y_test, y_pred)\n    precision = precision_score(y_test, y_pred)\n    recall = recall_score(y_test, y_pred)\n    f1 = f1_score(y_test, y_pred)\n\n    \n    print(f\"Accuracy: {accuracy:.4f}\")\n    print(f\"Precision: {precision:.4f}\")\n    print(f\"Recall: {recall:.4f}\")\n    print(f\"F1 Score: {f1:.4f}\")\n\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:33.416716Z","iopub.execute_input":"2024-07-22T12:58:33.417192Z","iopub.status.idle":"2024-07-22T12:58:33.793132Z","shell.execute_reply.started":"2024-07-22T12:58:33.417154Z","shell.execute_reply":"2024-07-22T12:58:33.792082Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"markdown","source":"#### Logistic Regression Training and Evaluation ","metadata":{}},{"cell_type":"code","source":"lr_model = LogisticRegression()\nlr_model.fit(X_train, y_train)\nevaluate_model(lr_model, X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:33.794294Z","iopub.execute_input":"2024-07-22T12:58:33.794612Z","iopub.status.idle":"2024-07-22T12:58:33.901728Z","shell.execute_reply.started":"2024-07-22T12:58:33.794585Z","shell.execute_reply":"2024-07-22T12:58:33.900626Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stdout","text":"Accuracy: 0.9299\nPrecision: 0.0000\nRecall: 0.0000\nF1 Score: 0.0000\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**this is caused by the imbalanced classes**","metadata":{}},{"cell_type":"markdown","source":"#### Random Forest Training and Evaluation ","metadata":{}},{"cell_type":"code","source":"rf_model = RandomForestClassifier()\nrf_model.fit(X_train, y_train)\nevaluate_model(rf_model,X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T12:58:33.903111Z","iopub.execute_input":"2024-07-22T12:58:33.90377Z","iopub.status.idle":"2024-07-22T12:58:38.673109Z","shell.execute_reply.started":"2024-07-22T12:58:33.903734Z","shell.execute_reply":"2024-07-22T12:58:38.672045Z"},"trusted":true},"execution_count":29,"outputs":[{"name":"stdout","text":"Accuracy: 0.9365\nPrecision: 0.5889\nRecall: 0.3123\nF1 Score: 0.4081\n","output_type":"stream"}]},{"cell_type":"markdown","source":"#### XGBoost Training and Evaluation ","metadata":{}},{"cell_type":"code","source":"xgb_model = XGBClassifier()\nxgb_model.fit(X_train, y_train)\nevaluate_model(xgb_model, X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T13:01:48.269796Z","iopub.execute_input":"2024-07-22T13:01:48.270205Z","iopub.status.idle":"2024-07-22T13:01:49.863343Z","shell.execute_reply.started":"2024-07-22T13:01:48.270172Z","shell.execute_reply":"2024-07-22T13:01:49.862303Z"},"trusted":true},"execution_count":31,"outputs":[{"name":"stdout","text":"Accuracy: 0.9352\nPrecision: 0.5736\nRecall: 0.2947\nF1 Score: 0.3894\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**Random Forest  and XGBoost appears to be the best models among the three based on the following considerations:**\n- The accuracy is quite high, indicating that a large proportion of the overall predictions are correct.\n- Precision is moderate, suggesting that when the model predicts a positive class (e.g., failure condition), it is correct about 57% of the time.\n- Recall is relatively low, meaning that the model only identifies about 29% of the actual positive cases.\n- The F1 score, which is the harmonic mean of precision and recall, is quite low.","metadata":{}},{"cell_type":"markdown","source":"**Critique:**\n\n***High Accuracy with Low Recall:*** \n\n The high accuracy is likely due to the model's performance on the majority class, which can overshadow poor performance on the minority class (e.g., failure condition).\n Low recall indicates that the model fails to detect a large portion of actual failures, which can be problematic in critical applications.\n\n***Moderate Precision:***\n\nWhile the precision is somewhat acceptable, the low recall severely limits the model's utility in scenarios where identifying positive cases is crucial.","metadata":{}},{"cell_type":"markdown","source":"**Recommendations to improve Recall:**\n\n**When dealing with imbalanced datasets, where one class is significantly underrepresented compared to another,it’s crucial to apply specific strategies to improve model performance, especially in critical applications. Here’s a breakdown of resampling techniques, including SMOTE**","metadata":{}},{"cell_type":"markdown","source":"### Resampling the Majority Class With SMOTE","metadata":{}},{"cell_type":"code","source":"from imblearn.over_sampling import SMOTE\n\n# Initialize SMOTE\nsmote = SMOTE(random_state=42)\n\n# Fit and transform the training data\nX_resampled, y_resampled = smote.fit_resample(X_train, y_train)\nX_test_res, y_test_res=smote.fit_resample(X_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T13:02:07.958408Z","iopub.execute_input":"2024-07-22T13:02:07.958802Z","iopub.status.idle":"2024-07-22T13:02:08.129355Z","shell.execute_reply.started":"2024-07-22T13:02:07.958773Z","shell.execute_reply":"2024-07-22T13:02:08.128476Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"code","source":"rf_model = RandomForestClassifier()\nrf_model.fit(X_resampled, y_resampled)\nevaluate_model(rf_model, X_test_res, y_test_res)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T13:02:09.72875Z","iopub.execute_input":"2024-07-22T13:02:09.730001Z","iopub.status.idle":"2024-07-22T13:02:20.512706Z","shell.execute_reply.started":"2024-07-22T13:02:09.729966Z","shell.execute_reply":"2024-07-22T13:02:20.511692Z"},"trusted":true},"execution_count":33,"outputs":[{"name":"stdout","text":"Accuracy: 0.8142\nPrecision: 0.8956\nRecall: 0.7112\nF1 Score: 0.7929\n","output_type":"stream"}]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"xgb_model = XGBClassifier()\nxgb_model.fit(X_resampled, y_resampled)\nevaluate_model(xgb_model,  X_test_res, y_test_res)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T13:44:57.853323Z","iopub.execute_input":"2024-07-22T13:44:57.854388Z","iopub.status.idle":"2024-07-22T13:44:59.321254Z","shell.execute_reply.started":"2024-07-22T13:44:57.854345Z","shell.execute_reply":"2024-07-22T13:44:59.320159Z"},"trusted":true},"execution_count":39,"outputs":[{"name":"stdout","text":"Accuracy: 0.8483\nPrecision: 0.8969\nRecall: 0.7871\nF1 Score: 0.8385\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**Implement Early Stopping**","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import cross_val_score\n\nX_train_res, X_val_res, y_train_res, y_val_res = train_test_split(X_resampled, y_resampled, test_size=0.2, random_state=42)\n\nxgb_model = xgb.XGBClassifier(use_label_encoder=False, eval_metric='logloss')\n\n# Perform cross-validation\ncv_scores = cross_val_score(xgb_model, X_resampled, y_resampled, cv=5, scoring='f1')\n\n# Fit the model with early stopping\nxgb_model.fit(\n    X_train_res, y_train_res,\n    eval_set=[(X_val_res, y_val_res)],\n    early_stopping_rounds=10,\n    verbose=False\n)\n\n# Evaluate the model\nevaluate_model(xgb_model, X_test_res, y_test_res)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T13:51:53.691247Z","iopub.execute_input":"2024-07-22T13:51:53.691938Z","iopub.status.idle":"2024-07-22T13:51:55.45623Z","shell.execute_reply.started":"2024-07-22T13:51:53.691905Z","shell.execute_reply":"2024-07-22T13:51:55.45523Z"},"trusted":true},"execution_count":41,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"Accuracy: 0.8498\nPrecision: 0.8948\nRecall: 0.7927\nF1 Score: 0.8407\n","output_type":"stream"}]},{"cell_type":"markdown","source":"### Lets do some Hyperparameter tuning to improve the model","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV\nimport xgboost as xgb\n\n# Define the parameter grid\nparam_grid = {\n    'n_estimators': [100, 200, 300],\n    'max_depth': [3, 5, 7],\n    'learning_rate': [0.01, 0.1, 0.2],\n    'subsample': [0.8, 1.0],\n    'colsample_bytree': [0.8, 1.0],\n    'scale_pos_weight': [1, 10, 20]  # Adjusting for imbalance\n}\n# Initialize the model\nxgb_model = xgb.XGBClassifier(use_label_encoder=False, eval_metric='logloss')\n\n# Initialize GridSearchCV\ngrid_search = GridSearchCV(estimator=xgb_model, param_grid=param_grid, cv=3, scoring='f1', verbose=2, n_jobs=-1)\n\n# Fit GridSearchCV\ngrid_search.fit(X_resampled, y_resampled)\n\n# Get the best model\nbest_xgb_model = grid_search.best_estimator_\n# Evaluate the best model\nevaluate_model(best_xgb_model, X_test_res, y_test_res)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T13:30:42.674304Z","iopub.execute_input":"2024-07-22T13:30:42.676361Z","iopub.status.idle":"2024-07-22T13:35:18.680828Z","shell.execute_reply.started":"2024-07-22T13:30:42.676325Z","shell.execute_reply":"2024-07-22T13:35:18.679503Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":37,"outputs":[{"name":"stdout","text":"Fitting 3 folds for each of 324 candidates, totalling 972 fits\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.9s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.9s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.9s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=0.8, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.9s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.01, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.9s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.9s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.9s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   2.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.1, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=3, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=200, scale_pos_weight=20, subsample=1.0; total time=   1.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=0.8; total time=   1.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=5, n_estimators=300, scale_pos_weight=20, subsample=1.0; total time=   1.6s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=0.8; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=1, subsample=1.0; total time=   1.0s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=10, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=0.8; total time=   0.8s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=100, scale_pos_weight=20, subsample=1.0; total time=   0.7s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=1, subsample=1.0; total time=   1.3s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=10, subsample=1.0; total time=   1.4s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=200, scale_pos_weight=20, subsample=0.8; total time=   1.5s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=0.8; total time=   2.2s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=1, subsample=1.0; total time=   1.9s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=10, subsample=1.0; total time=   2.1s\n[CV] END colsample_bytree=1.0, learning_rate=0.2, max_depth=7, n_estimators=300, scale_pos_weight=20, subsample=0.8; total time=   2.3s\nAccuracy: 0.8444\nPrecision: 0.9115\nRecall: 0.7628\nF1 Score: 0.8305\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**Accuracy: 0.8444\nPrecision: 0.9115\nRecall: 0.7628\nF1 Score: 0.8305**","metadata":{}},{"cell_type":"markdown","source":"### Conclusion\n","metadata":{}},{"cell_type":"markdown","source":"- Recall is higher in XGBoost model without Hyperparameter tuning , meaning it identifies more true positive cases, which is critical for imbalanced datasets and sensitive applications.\n- F1 Score, which balances precision and recall, is also higher in XGBoost model without Hyperparameter tuning , indicating a better trade-off between precision and recall.\n","metadata":{}},{"cell_type":"markdown","source":"**Given the importance of recall and the higher F1 score, XGBoost model without Hyperparameter tuning  is the better choice in this case.**","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}